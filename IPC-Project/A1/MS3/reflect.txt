/*
*****************************************************************************
                        Assignment 1 - Milestone 3
Full Name  : Alex Chu
Student ID#: 153954219
Email      : kchu30@myseneca.ca
Section    : NJJ

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
*****************************************************************************
*/

1. I have created the following functions as which some of the library were not included or prohibitted of using
a: void dateInput(int* yearPtr, int* monthPtr, int* dayPtr);
	purpose: This function is to reduce the recognised repeating pattern of code which is to receive the user input of the appointment date which seems to be repeating inside different functions including the viewAppointmentSchedule, addAppointment and removeAppointment etc. For each of this dateInput calls, it reduces these 35 lines once and there were at least called for 3 times, so it saved quite significant times and also make the programme a bit lighter.
	value: As mentioned above, it makes the programme lighter and save time for unnecessary repetition, which I think is one of the goal to provide IT solutions to real life.

b: char* cus_strcpy(char* str2, const char* str1);
	purpose: The purpose of this function is to copy the string while not using the strlib. It uses a pointer of tempholder to store the value of the pointer at str2, then it copies the value from str1 to str2 until it reaches the null terminator.
	value: It helps me to exercise the same purpose as the original strcpy when strlib is not able to call. 
	
c: void swap(struct Appointment* a, struct Appointment* b);
	purpose: This swap function gives me the functionality to swap the value inside the struct, which compliment the next function call which is needed to do the sorting.
	value: This is an essential function which I can swap the data set in different index.
	
d: void BubbleSort(struct Appointment appoint[], int size);
	purpose: The BubbleSort is one of the many sorting methods and it fits so well while sorting the numbers or strings alphabetically. I have set it up to sort out date and time values, by putting the dates and times into a timestamp format then compare with a selection construct and swap the numbers and by doing that using iteration, it sorts the datafile in order.
	value: The value of this function is essential and critical, only by using this kind of sorting method or some preset functions like qsort will make things work.
	

2. The total lines of codes are 100, it saved me more than few hundreds of line by calling the repeatable functions such as inputIntPositive, findPatientIndexByPatientNum, inputIntRange etc. Starting at the input of Patient Number, I used the inputIntPositive to check the value input is correct, that was used two times and it includes the inputInt function so it was around 40 lines saved. For the inputIntRange it was used 9 times so it was around 200 lines saved. There is also another part for inputting the date, which has been used for viewAppointmentSchedule, addAppointment and removeAppoint which includes a lot of lines and this pattern is to refer to another function dateChecker.

3. As far as what I have learnt from the course, I have been working a lot on both writing codes, creating solutions, and at the same time read a lot materials on the internet especially on stackoverflow which there are lots of super intelligent programmers I can learn from. I spent almost 3/4 full days a week on this IPC course, especailly on this milestone coursework I spent even more like 4-5 full days a week to learn and brush up my skills. To be honest this is a very difficult and time consuming assignment, and the deadline is really tight. Especially on the sorting function on MS3 is really difficult and needed to think of all possible ways to create the ultimate solution. This however made me learnt a lot and I truly believe it will stack up for my upcoming C++ course later.